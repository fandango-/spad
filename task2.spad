)abbrev package CTASK2 CodingTask2
++ \spadtype{CodingTask2} is a dummy package.
CodingTask2(Coeff, Ab, R) : Exports == Implementation where
    Coeff : Ring
    Ab : AbelianMonoidRing(Coeff, NonNegativeInteger)
    R : Join(DifferentialRing, LeftModule(Ab))

    L1 ==> LinearOrdinaryDifferentialOperator1 R
    L3 ==> LinearOrdinaryDifferentialOperator3(Coeff, Ab, R)

    Exports == with
        convertOp : L1 -> L3
            ++ convertOp(l1) converts an operator l1 from
            ++ \spadtype{LinearOrdinaryDifferentialOperator1} to
            ++ \spadtype{LinearOrdinaryDifferentialOperator3} such that the
            ++ resultant operator gives the same result as the original one
            ++ on application to an element of domain R.
        convertOp : L3 -> L1
            ++ convertOp(l3) converts an operator l3 from
            ++ \spadtype{LinearOrdinaryDifferentialOperator3} to
            ++ \spadtype{LinearOrdinaryDifferentialOperator1} such that the
            ++ resultant operator gives the same result as the original one
            ++ on application to an element of domain R.

    Implementation == add
        convertOp(l1 : L1) ==
            l3 : L3 := 0
            while l1 ~= 0 repeat
                l3 := (l3 +
                      leadingCoefficient(l1) *
                      (((recip(monomial(1, 1) * 1$R)) :: R) * D())^degree(l1))
                l1 := reductum l1
            l3
        convertOp(l3 : L3) ==
            l1 : L1 := 0
            while l3 ~= 0 repeat
                l1 := (l1 + leadingCoefficient(l3) *
                            ((monomial(1, 1) * 1) * D())^degree(l3))
                l3 := reductum l3
            l1

